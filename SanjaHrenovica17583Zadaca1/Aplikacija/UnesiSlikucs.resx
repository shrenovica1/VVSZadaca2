<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBoxSlika.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAgAAAAIACAYAAAD0eNT6AAAABGdBTUEAALGPC/xhBQAAFZVJREFUeF7t
        3Ytx3Ni1hlFnoTSYCUNhBL4BMA9lwiyUhDLw/bd0uobCgGKjicc5wFpVX7nK9gxfwAYaz/8AAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/7v//+91vrqfXcennXa+v9f3f7/93+uV//nvav
        BQCO1jbOt4369/SWfqb/bVT9u+tr1Ne67SzYOQCALdRGtm1s69N6bXx/pLkN9JHV91TfW32PdgwAYKna
        eLaNaG1M6xP33AZ3hOp7t0MAAB/JBrLOt4++wf+s2w7BU/uxAeB6siGsT8Z12HzL8/a9Vj9z/ezP7dcB
        AOeVDd7tk/4VN/ofVb8LRwYAOJds2Oqcfl013+PFe71Vv6P6XblmAIAxtQ3Zmc/pb1397l7arxMA+lYb
        reTT/nr9OirQfr0A0I9soG6H+Z3b36763To9AMDxamOUXNS3b7eLBu0IALCv2vi0jZAN/3HZEQBgP9ng
        ONTfV792BNqfBwDWlY1MPbjHxX39Vn8bDxYCYB3ZqNTh/npq3dxGR/1VfyunBQB4XDYkDvePWf3N3DoI
        wDLZeNQjex3uHz+nBQC4TzYYDvefL6cFAJiXDYRP/eeu/rZeOATAP7JhcK7/Grk2AIDfskFwyP96OSUA
        cFXZADjkf+2cEgC4mgx+h/xVOSUAcBUZ+A75a9r3tngAcEYZ9G+TwS/demuLCQBnkeFej/O18ddn1TLi
        4kCAM6iBnlzsp3urZcVOAMDIMshd6a9HcocAwKhqgCdX+uvRatmxEwAwkgzuene/jb++Wi1DXiYEMIIa
        2O8GuLRGdgIAepZB7bC/tsjpAIBe1YBug3pugEtfzU4AQG8ymN3qpz1yiyBAL2ogt8E8N7CltbMTANCD
        DGNP+NPeeWwwwJFqEE8Gs7RXdgIAjpAB7K1+OjpvEQTYUwZvvc9/biBLe/fSFksAtpSBW7f7zQ1i6ajc
        HgiwpQxaV/yrx9wZALClDFnn/dVrrgcA2EIGrPP+6j3XAwCsKYPVY341Qh4XDLCWDFTn/TVSrgcAWEOG
        qfP+Gi3XAwB8RQapd/tr1J7bYgzAUhmiDv1r1H60xRiAJTJAXfWv0XNXAMASGZx14Z+r/jV6tQy7IBDg
        XhmaLvzTWXJBIMA9MjBd+Kez5YJAgM9kWLrwT2fLBYEAf5NB+ToZnNJZem2LOQDvZUDWhX9zg1M6Sy4I
        BJjKcPTpX2fPUQCA9zIY3fanK+S2QID3MhR9+tdVchQAoGQg+vSvK+UoAEDJMPTpX1fLUQDg2jIIffrX
        FXMUALi2DEEv/NFV86Ig4LoyBH3611X72VYDgGvJAPTpX1fPUQDgejL83ibDULpab211ALiGDL6nySCU
        rtpTWy0Azi9Dz61/0u/cEghcR4aeV/5Kv/OqYOAaMvAc/pf+zGkA4Pwy7L5Php909b631QPgvDLs3Psv
        /ZlnAgDnlkH3PBl8kn733FYTgPPJkHP4X5rPaQDgvGaGnqRWW00AziUDzuF/6e85DQCcT4abh/9If89D
        gYDzyXDz7H/p73k3AHAuGWzfJoNO0nzf2moDML4MNef/pftyHQBwHhlqzv9L9+U6AOA8MtS8/Ee6Ly8H
        As4hA835f2lZrgMAxpdh5vy/tCzXAQDjyzBz/l9alusAgPFlmHn+v7Qs7wUAxpdh5gJAaVkuBATGNzPc
        JH1SW30AxpRB9jQdbJLu6qmtRgDjyRBzB4D0WO4EAMaVIfYyGWqS7uulrUYA48kQcweA9FjuBADGlSHm
        FcDSY3k1MDCuDLGfk6Em6b5+ttUIYCwZYN4BIH0t7wQAxlPDazLMJC3LDgAwngwvzwCQvpZnAQDjqeE1
        GWaSlmUHABhPhpeHAElfy8OAgPHU8JoMM0nLsgMAjKeG12SYSVqWHQBgPBleHgMsfS2PAwbGU8NrMswk
        LcsOADCeDK/XyTCTtKzXtjoBjKOG12SYSVqWHQBgPDW8JsNM0rLsAADjqeE1GWaSlmUHABhPhpeLAKWv
        5SJAYDw1vCbDTNKy7AAA46nhNRlmkpZlBwAYT4aXJwFKX8uTAIHx1PCaDDNJy7IDAIynhtdkmElalh0A
        YDwZXk+TYSZpWU9tdQIYRw2vyTCTtCw7AMCYZgaapDtrqxHAeDLEfkyHmqS7+tFWI4DxZIi9TYaapPt6
        a6sRwHgyxL5Phpqk+/reViOA8WSIeSGQ9FheBASMK0PMswCkx/IMAGBcGWJuBZQeyy2AwLgyxL5Nhpqk
        +/rWViOAMWWQ/ZwMNkl/72dbfQDGlWHmVkBpWW4BBMaXYeZOAGlZ7gAAxpdh5k4AaVnuAADGl2HmQkBp
        WS4ABM4hA807AaT78g4A4Dwy1DwSWLovjwAGziND7WUy5CTN99JWG4DxZah5IqB0X54ACJxLBpvrAKS/
        5/w/cD4Zbp4HIP099/8D55Ph5nkA0t9z/z9wThlw3gsgzef5/8B5Zci5HVCaz+1/wHllyDkNIM3n8D9w
        bhl0TgNIf+bwP3B+GXZOA0h/5vA/cH4Zdk4DSH/m8D9wDRl4TgNIv3P4H7iODD0PBZJ+5+E/wHVk6Hk3
        gPQ7z/4HriWD720yCKWr9dZWB4DryPBzMaCunov/gGvKAHQxoK6ai/+A68oQdDGgrpqL/4DryhD8NhmK
        0lX61lYDgGvKIPRkQF0tT/4DyDB0FEBXy6d/gJKB6FoAXSXn/gFuMhTrKIA7AnT2ahn36R/gvQxGRwF0
        9nz6B5jKcHQUQGfOp3+Aj2RAOgqgs+bTP8BHMiQdBdAZ8+kf4DMZlC/vBqd0hl7a4g3A32RgelOgzpI3
        /gHcK0PzaTJEpVHzvn+AJTI4XRCo0XPhH8AjMkB/TAaqNEo/2mIMwFIZos+ToSqN0nNbjAF4RAaptwVq
        tLztD+CrMkzr2QBOBWiUall1zz/AGjJQ3RWgUXLVP8CaMlg9IEi954E/AFvIgHU9gHrNeX+ArWTIuh5A
        Pea8P8DWMmhdD6Dect4fYA8ZuK4HUC857w+wpwxe1wPo6Jz3BzhCDeDJQJb2ysYf4EgZxF4drL3zil+A
        o2UYuzNAe+aKf4Be1EBOP9uAlraqljEbf4CeZDDX7YF2ArRVtWy53Q+gRzWg26CeG+DSo9n4A/SuBnUb
        2HODXFqajT/AKGpgt8E9N9Cle7PxBxhNDe42wOcGu/RZNv4Ao6oBntwiqKXVMmPjDzCyDHLPCdCS3OcP
        cBY10JMnBuqzahmx8Qc4mwx37w7QR3m2P8CZZdB7lbCmeaUvwBVk4D8ndwioloHntlgAcAUZ/O4QuHau
        9Ae4qmwA6uJA1wVcr/qbu9gP4OqyMajrApwSOH/1N3a+H2AEGdj1Kf21/rP9V5toX8etgudt81v86t+f
        Nl9WAU4vg/T9J/P6z83P2bavOd14aNx2+dSfr/H+0dOONAA8IsOzrtKfu0CvBuvmV23na9QwdzRg/Opv
        uMdO40d3ldQy7C4DgM9kWN674d1lqObr1OHcua+v/nttf8ZN5evUxn/u679vlx0RgOFkOD5yNf4uh1jz
        dRwNGKvdNrb5OktPF7n7AOAmA/ErV+Dv8imv5Gt9dFpCfbTr4fZ8rUePDrk+ALi2DMG1HsSz6zPc8/Xc
        MthXu29Q8/XWeHZELftOCwDXksG39rn1vXcCbrd72RE4rvrd737LXb7e2g+O2u0oFsBhMuy2PIxe5373
        3hg8cu2Cvt7u59Lr66WtrgXZ9fQFwG4y3PbaUNanwt0Hab6mIwLbd8gn/pKv+dFtfmu3+44NwGYy0PYa
        nu875LBqvm7tCNQ1Alsd5bhi9bus3+khG8Z83bVPV33WITuxAKvJEDv68PjupwTey9euHR+3Dz5e/e4O
        2xDma295yP+eHA0AxpPBdcSn/rkO/zSVr193O9Qw7+H30Xv1O6rf1aFXx+frW34BlsrA2vuQ6T11caV1
        vo/asNgZ+LPbRr+LDV2+D8svwBIZUkcfMv2sQ08JTOV7ufLOQFcb/ZLvxfILsFQGUy+HTD+rvseunsKW
        76c2PLedgTNfPFg/26+NfupqQ5bvZ5SHO9X36JQA0IcMpBrqc8Oq52pj1OVT2PJ9nWWHoNsN/k2+r7We
        Rrl3TgkAx8kQGnV4vq82UF0fVq3vL9VGtM5N12HgHj+p1vdU31t9j91u8G/q+0sj7ri+r37fHiUM7CuD
        p4b8CIdM76l+jqFezpLvtzZgtQN22zGojdnWOwe3jXx9rduGvr6Hoc5L5/s907sc6udwSgDYRwZOj1dJ
        r9EpPlHlZ7jtHNx2EG7Vhq+qv99tp+G2Ma9u//v7f+b27xlqIz+n/Rz1N57724+etwsC28qgGf2w6T3V
        xnD4DR6/1d+y/U3n/tZnatcXYgEXkeFSQ/Ssn57m+nVaINkRGFT97drf8CyH+++p1lHLLLCODJQ6dHql
        Ifq++rkdERhI/a3a3+yqy2y3d7gAA8kgqfPAVx2k77Mj0Ln627S/keX19+/AxYHAYzJArnDedGl2BDpT
        f4v2N7Hh/3eeFwAsk8FxhYv9vlr9jhxqPUj97tvfYO5vo39ycSBwnxoYkwGiv1e/L4dbd1K/6/Y7n/tb
        aD47AcDHMiSudqX/2tUhaEcFNlC/0/a7dZj/8dwhAPxbDYY2IOYGh5ZXV2K7VuAL6nfXfoejP266p+wE
        AP+ogZAM2e2qoeuZAneo31H7XdkZ3a5a1y2LcHUZBHVo1cZ/v+owdm3gnCZo6nfRfifO6+9XrfOWQbiq
        GgDJOdXjul0zcKkdgvpZ28/snP6x1e/eTgBcTa34bQDMDQYdU30qu+0QnOYQbf0s7Weqn83Rpr6yEwBX
        Uit8W/HnBoL66bZDUBfC/TpKkLrdMajvrX2P9b3W92yDP0Z2AuAKakVvK/zcINAY1d+vLpK7HS349dre
        9ifeXH2t9jVvn+rre7FMjZ2dADizWsHbij43AHSO6u9bn7qr2jDfdhRuRxJuRxNuOw63DXl1+99v///b
        P3/791l2zp2dADijrNhu9ZP0WTUj3CIIZ1ErdFux51Z4SXqfnQA4g1qR2wo9t6JL0lx2AmBktQKnOoc7
        t4JL0t+q2WEnAEbUVuC5FVuS7umtjRNgFFlx6yruuRVakpbkVcIwiqywdSvX3IosSY/02sYL0KusqHVf
        99wKLElf6bmNGaA3WUHrQT9zK64krZEHBUFvsmLWFf+e1CZpy2rGuDMAelErZHKvv6Q98owA6EVWRrf7
        SdoztwfC0bIiuuJf0hG5MwCOkhXQFf+SjsydAbC3rHhe7Svp6LxCGPaWlc5Ff5J66EcbS8DWssJ5zK+k
        nvK4YNhaVrSXyYonST3kegDYSlYw5/0l9ZrrAWALWbE87EdS77keANaWFct5f0kj5HoAWEtWKOf9JY2U
        6wHgq7IiecmPpNGqmeV9AfAVWYk851/SiDkVAI/KCuTQv6SRcyoAlsqK49C/pNFzKgCWykrjqn9JZ8ip
        ALhXVhhv+ZN0ppwKgM9kRXHoX9LZcioAPpOVxKF/SWfMqQD4SFYQh/4lnTmnAmBOVg7P+pd05rwrAKay
        YrxOVhRJOmOvbewBWSFc+CfpKrkgEG6yMrjwT9KVckEgZEVw4Z+kK+aCQK4tK4EL/yRdMRcEcl1ZAbzs
        R9KVe2njEK4jC74L/yRdPRcEcj1Z6N32J0luC+RKssA/TVYASbpyT208wrllYXfbnyT9k9sCOb8s6D79
        S9K/cxSAc8tC7tO/JP07RwE4ryzgPv1L0sc5CsA5ZeH26V+SPs5RAM4nC7ZP/5L0eY4CcC5ZqH36l6TP
        cxSA88gC7dO/JN2fowCcQxZmn/4l6f4cBWB8WZDrmf9zC7gk6eO8I4CxZSH2zH9JWp53BDC2LMTe+CdJ
        y/vZxiiMJwuw9/1L0uO9tHEKY8nC+2OyMEuS7u9HG6cwjiy4z5MFWZK0vOc2VmEMWWjd+idJX88tgYwj
        C6xb/yRpvdwSyBiysLr1T5LWyy2BjCELq1v/JGm93BJI/7KguvVPktbPLYH0LQvp22ShlSR9vbc2ZqE/
        WUBd/CdJ2+ViQPqUhdPhf0naLqcB6FMWTk/+k6Tt8mRA+pMF82myoEqS1u+pjV3oQxZK9/5L0vZ5JgB9
        yULp8L8kbZ/TAPQjC6QX/0jSfnlBEH3IwujFP5K0X14QRB+yMHr0ryTtl0cDc7wsiA7/S9L+OQ3AsbIQ
        uvpfkvbP3QAcKwuhq/8laf/cDcBxsgB6+I8kHZeHAnGMLHye/S9Jx+XdABwjC59X/0rScXlFMPvLgufV
        v5J0fF4RzL6y0Ln9T5KOz+2A7CsLnaf/SdLxeSog+8pC5+l/knR8ngrIfrLAuf1PkvrJ7YDsIwub2/8k
        qZ/cDsg+srA5/y9J/eQ6APaRhc3jfyWpnzwWmO1lQXP/vyT1l+cBsK0sZO7/l6T+8jwAtpWFzOt/Jam/
        vB6YbWUh8/x/Seov7wVgWzMLnSSpg9qYhvVlAfMAIEnqNw8EYhtZuDwASJL6zQOB2EYWLg8AkqR+80Ag
        tpGFywOAJKnfPBCIbcwsbJKkjmrjGtaTBcsFgJLUfy4EZF1ZqDwBUJL6zxMBWVcWKncASFL/uROAdWWh
        cgeAJPWfOwFYVxYqjwCWpP7zSGDWlYXq52QhkyT11882tuHrskB9myxgkqR++9bGN3xNFiZ3AEjSOLkT
        gHVkYXIHgCSNkzsBWEcWptfJwiVJ6rfXNr7ha2phmixckqR+swPAOmphmixckqR+swPAOrIwuQZAksbJ
        NQCsIwuTuwAkaZzcBcA6sjDVcwA8CEiS+q9mtecAsJ4sUN4FIEn9510ArCsL1dNkIZMk9ddTG9uwnixY
        7gaQpH5z9T/byQLmrYCS1F/eAsi2spDVBYF2AiSpn2omu/CP7dWC1ha4uQVRkrRfNv7sLwtdPSDI7YGS
        tH81ez3wh+NkAayjAXWLoB0BSdq+mrU1c33qpx9ZIOuJgXWnQB2S+pHsFEjS49UMrVlaM7Vmqyf8AQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAv85z//D/T3
        /Y3Rf+LeAAAAAElFTkSuQmCC
</value>
  </data>
</root>